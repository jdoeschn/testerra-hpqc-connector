plugins {
    id "com.jfrog.bintray" version "1.8.5"
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group 'eu.tsystems.mms.tic.testerra'

def dnp(prj) {
    prj.jar.enabled = true
    prj.publish.enabled = false
    prj.publishToMavenLocal.enabled = false
}

project.ext {
    testerraVersion = '1.+'
    doNotPublish = this.&dnp
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish' // tasks publish and publishToMavenLocal
    apply plugin: 'jacoco' // code-coverage

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    // custom tasks for creating source/javadoc jars
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    // add source jar tasks as artifacts
    artifacts {
        archives sourcesJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
            }
        }

        repositories {
            maven {
                url System.getProperty("deployUrl", "none")
                credentials {
                    username System.getProperty("deployUsername", "none")
                    password System.getProperty("deployPassword", "none")
                }
            }
        }
    }

    tasks.whenTaskAdded { t ->
        if (t.name.startsWith("publish")) {
            boolean e = t.project.publish.enabled
            if (!e) {
                println "Not running publish for " + t.project.name
                t.enabled = false
            }
        }
    }

}

test {
    useTestNG()
}

doNotPublish(this)

task publishToBintray(type: GradleBuild) {
    tasks = [
            'qc11-connector:bintrayUpload',
            'qc-restclient:bintrayUpload'
    ]
}


